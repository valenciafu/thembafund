{"version":3,"sources":["webpack:///./src/components/misc/Contact.tsx","webpack:///./src/pages/contact.tsx"],"names":["Contact","props","state","NAME","EMAIL","MESSAGE","isDisabled","this","handleChange","event","preventDefault","target","name","value","updates","setState","render","bordered","shaded","mb2","id","action","method","noValidate","style","marginBottom","M0","label","type","required","onChange","e","isTextarea","fullWidth","disabled","React","Component","ContactPage","Layout","SEO","title"],"mappings":"yLAKA,IAQaA,EAAb,Y,QACE,WAAYC,GAAW,aACrB,cAAMA,IAAN,MACKC,MAAQ,CACXC,KAAM,GACNC,MAAO,GACPC,QAAS,IALU,E,EADzB,G,EAAA,G,6EAAA,2BAUUC,WAAR,WAEE,OADkBC,KAAKL,MAAfE,OAXZ,EAeUI,aAAR,SAAqBC,GAA4C,MAC/DA,EAAMC,iBADyD,MAEvCD,EAAME,OAAtBC,EAFuD,EAEvDA,KAAMC,EAFiD,EAEjDA,MACRC,IAAO,MACVF,GAAOC,EADG,GAGbN,KAAKQ,SAASD,IArBlB,EAwBSE,OAAP,WAAgB,aACmBT,KAAKL,MAA9BC,EADM,EACNA,KAAMC,EADA,EACAA,MAAOC,EADP,EACOA,QACfC,EAAaC,KAAKD,aACxB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMW,UAAQ,EAACC,QAAM,GACnB,kBAAC,IAAD,CAAIC,KAAG,GAAP,uBACA,kBAAC,IAAD,kCACA,0BACEC,GAzCU,gCA0CVC,OA1CU,gCA2CVC,OAAO,OACPC,YAAU,EACVC,MAAO,CAAEC,aAAcC,KACvBf,OAAO,UAEP,6BACE,kBAAC,IAAD,CACEgB,MAAM,OACNd,MAAOV,EACPyB,KAAK,OACLhB,KAAK,OACLQ,GAAG,OACHS,UAAQ,EACRC,SAAU,SAAAC,GAAC,OACT,EAAKvB,aAAauB,OAIxB,6BACE,kBAAC,IAAD,CACEJ,MAAM,gBACNd,MAAOT,EACPwB,KAAK,QACLhB,KAAK,QACLQ,GAAG,QACHS,UAAU,EACVC,SAAU,SAAAC,GAAC,OACT,EAAKvB,aAAauB,OAIxB,6BACE,kBAAC,IAAD,CACEC,YAAU,EACVL,MAAM,UACNd,MAAOR,EACPO,KAAK,UACLQ,GAAG,UACHS,UAAU,EACVC,SAAU,SAAAC,GAAC,OACT,EAAKvB,aAAauB,OAIxB,kBAAC,IAAD,CACEE,WAAS,EACTR,aAAcC,IACdQ,SAAU5B,EACVsB,KAAK,SACLf,MAAM,SACND,KAAK,kBArFnB,GAA6BuB,IAAMC,WCCpBC,UAPK,kBAClB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,MAAM,YACX,kBAAC,EAAD","file":"component---src-pages-contact-tsx-b5b4ff3c88f8697ce15b.js","sourcesContent":["import React from 'react'\nimport { MAILCHIMP_SUBSCRIBE_ROUTE } from '../../constants/routes'\nimport { ThinContainer, BtnInput, Input, H2, Card, P } from '../../shared'\nimport { M0 } from '../../constants/measurements'\n\nconst FORMSPREE_API = 'https://formspree.io/xnqvpvdq'\n\ninterface IMailchimpState {\n  NAME: string\n  EMAIL: string\n  MESSAGE: string\n}\n\nexport class Contact extends React.Component<{}, IMailchimpState> {\n  constructor(props: {}) {\n    super(props)\n    this.state = {\n      NAME: '',\n      EMAIL: '',\n      MESSAGE: '',\n    }\n  }\n\n  private isDisabled() {\n    const { EMAIL } = this.state\n    return !EMAIL\n  }\n\n  private handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    event.preventDefault()\n    const { name, value } = event.target\n    const updates = {\n      [name]: value,\n    } as Pick<IMailchimpState, 'FNAME' | 'LNAME' | 'EMAIL'>\n    this.setState(updates)\n  }\n\n  public render() {\n    const { NAME, EMAIL, MESSAGE } = this.state\n    const isDisabled = this.isDisabled()\n    return (\n      <ThinContainer>\n        <Card bordered shaded>\n          <H2 mb2>Let's stay in touch</H2>\n          <P>Contact The MBA Fund team</P>\n          <form\n            id={FORMSPREE_API}\n            action={FORMSPREE_API}\n            method=\"post\"\n            noValidate\n            style={{ marginBottom: M0 }}\n            target=\"_blank\"\n          >\n            <div>\n              <Input\n                label=\"Name\"\n                value={NAME}\n                type=\"text\"\n                name=\"NAME\"\n                id=\"NAME\"\n                required\n                onChange={e =>\n                  this.handleChange(e as React.ChangeEvent<HTMLInputElement>)\n                }\n              />\n            </div>\n            <div>\n              <Input\n                label=\"Email address\"\n                value={EMAIL}\n                type=\"email\"\n                name=\"EMAIL\"\n                id=\"email\"\n                required={true}\n                onChange={e =>\n                  this.handleChange(e as React.ChangeEvent<HTMLInputElement>)\n                }\n              />\n            </div>\n            <div>\n              <Input\n                isTextarea\n                label=\"Message\"\n                value={MESSAGE}\n                name=\"MESSAGE\"\n                id=\"message\"\n                required={true}\n                onChange={e =>\n                  this.handleChange(e as React.ChangeEvent<HTMLInputElement>)\n                }\n              />\n            </div>\n            <BtnInput\n              fullWidth\n              marginBottom={M0}\n              disabled={isDisabled}\n              type=\"submit\"\n              value=\"Submit\"\n              name=\"subscribe\"\n            />\n          </form>\n        </Card>\n      </ThinContainer>\n    )\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Layout from '../components/Layout'\nimport SEO from '../components/SEO'\nimport { Contact } from '../components/misc/Contact'\n\nconst ContactPage = (): React.ReactElement => (\n  <Layout>\n    <SEO title=\"Contact\" />\n    <Contact />\n  </Layout>\n)\n\nexport default ContactPage\n"],"sourceRoot":""}